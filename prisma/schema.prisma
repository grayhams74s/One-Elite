// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  lastName String?
  middleName String?
  age Int?
  password String
  phoneNumber String?
  address String?
  gender String?
  birthday DateTime?
  barangay String?
  city String?
  street String?
  houseNumber String?
  imageUrl String?
  role     String @default("user")
  posts Post[]
  bookings Booking[]
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Booking {
  id          Int      @id @default(autoincrement())
  serviceDate DateTime
  status      String   @default("pending")
  serviceType String
  notes       String?
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  referenceNo String?
  gcashNumber String?
  screenshot  String
  amount      Float
  vehicleSize String?
  vehicleMake String?
  vehicleModel String?
  vehicleYear String?
  plateNumber String?
  vehicleColor String?
  adminRequest Boolean @default(false)
  previousStatus String?
  updatedBy     String?
}
